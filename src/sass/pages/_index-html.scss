.main-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  box-shadow: inset 0 -10px 0 $white, inset 10px 0 0 $white, inset -10px 0 0 $white;
  min-height: 100vh;
  min-width: 100%;
  background: $background-color;

  @include for-tablet-up {
    box-shadow: inset 0 -20px 0 $white, inset 20px 0 0 $white, inset -20px 0 0 $white;
  }
}

.top-border {
  box-shadow: inset 0 10px 0 $white;
  height: 10px;
  width: 100%;

  @include for-tablet-up {
    box-shadow: inset 0 20px 0 $white;
    height: 20px;
  }
}

.about {
  margin: auto;
  max-width: 51rem;
  padding: 2rem;
  padding-top: 0;

  @include for-tablet-up {
    padding-bottom: 4rem;
    text-align: justify;
  }
}

.article-header {
  display: inline;

  @media screen and (min-width: 29.81em) {
    //477px
    display: block;
  }

  @media screen and (min-width: 20em) {
    //320px
    display: inline;
  }
}

.name-header {
  display: block;
  font-weight: 300;

  @media screen and (min-width: 20.125em) {
    //322px
    display: inline;
    padding-left: 0.5rem;
  }

  @media screen and (min-width: 30.5rem) {
    //488px
    display: block;
    padding-left: 0;
  }
}

.translatable-text {
  position: absolute;
  max-width: 47rem;
  margin-right: 2rem;
}

.svg-icon-handler {
  display: inline-flex;
  position: relative;
}

.translate-button-container {
  width: 1.7rem; //If height and width are larger, <p> element's height be higher than all the others (27px).
  height: 1.7rem;
  margin-right: 2rem;
}

.translate-button {
  position: absolute;
  top: -0.6rem;
  fill: $black;
  width: 3.1rem;
  height: 3.1rem;
  cursor: pointer;

  @include for-desktop-up {
    &:active {
      fill: $active-color;
    }

    &:hover {
      transform: scale(1.1);
    }
  }
}

.link {
  position: relative;
  color: $black;

  @include for-desktop-up {
    background: none;
    border: none;

    &:active {
      color: $active-color;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      bottom: 0.1rem;
      left: 0;
      right: 0;
      height: 0.05rem;
      background-color: $hover-color;
    }

    &::before {
      opacity: 0;
      transform: translateY(- $distance);
      transition: transform 0s $easeOutBack, opacity 0s;
    }

    &::after {
      opacity: 0;
      transform: translateY($distance/2);
      transition: transform $duration $easeOutBack, opacity $duration;
    }

    &:hover,
    &:focus {
      &::before,
      &::after {
        opacity: 1;
        transform: translateY(0);
      }

      &::before {
        transition: transform $duration $easeOutBack, opacity $duration;
      }

      &::after {
        transition: transform 0s $duration $easeOutBack, opacity 0s $duration;
      }
    }

    &:active::before,
    &:active::after {
      background-color: $active-color;
    }
  }
}
